## Installation
```r
# install from GitHub:
devtools::install_github("songshangchen6/seecolor")
seecolor::show_color()
draw_color_oneribbon <- function(bg.color, text.color = "ivory", blank.len = 1, next.line = FALSE){
tc <- make_style(text.color)
bgc <- make_style(bg.color, bg = T)
dc <- combine_styles(tc, bgc)
cat(
dc(paste0(paste0(rep(" ", blank.len), collapse = "")))
)
if (next.line) cat("\n")
}
draw_color_oneribbon(colours()[1])
library(seecolor)
draw_color_oneribbon(colours()[1])
library(crayon)
draw_color_oneribbon(colours()[1])
draw_color_oneribbon(colours()[2])
draw_color_oneribbon(colours()[2:5])
draw_colors_oneribbon() <- <- function(colors){
purrr::walk(colors, draw_color_oneribbon)
}
draw_colors_oneribbon() <- function(colors){
purrr::walk(colors, draw_color_oneribbon)
}
draw_colors_oneribbon() <- function(colors){
purrr::walk(colors, draw_color_oneribbon)
}
draw_colors_oneribbon <- function(colors){
purrr::walk(colors, draw_color_oneribbon)
}
draw_colors_oneribbon(colours()[1:4])
draw_colors_oneribbon(colours())
devtools::install()
seecolor::show_color()
seecolor::show_color(type = "oneribbon")
palette()
seecolor::show_color()
devtools::install(upgrade = F)
devtools::check()
usethis::use_mit_license()
?usethis::use_mit_license()
usethis::use_mit_license("Shangchen Song")
seecolor::show_color(type = "oneribbon")
devtools::check()
tempfile(fileext = ".R")
seecolor::show_color()
seecolor::show_color()
text <- "WHITE	#FFFFFF	RGB(255, 255, 255)
SILVER	#C0C0C0	RGB(192, 192, 192)
GRAY	#808080	RGB(128, 128, 128)
BLACK	#000000	RGB(0, 0, 0)
RED	#FF0000	RGB(255, 0, 0)
MAROON	#800000	RGB(128, 0, 0)
YELLOW	#FFFF00	RGB(255, 255, 0)
OLIVE	#808000	RGB(128, 128, 0)
LIME	#00FF00	RGB(0, 255, 0)
GREEN	#008000	RGB(0, 128, 0)
AQUA	#00FFFF	RGB(0, 255, 255)
TEAL	#008080	RGB(0, 128, 128)
BLUE	#0000FF	RGB(0, 0, 255)
NAVY	#000080	RGB(0, 0, 128)
FUCHSIA	#FF00FF	RGB(255, 0, 255))
PURPLE	#800080	RGB(128, 0, 128))
colors
palette
"
?writeLines(text, )
writeLines(text, tempfile(fileext = ".R"))
open_sample <- function(){
text <- "WHITE	#FFFFFF	RGB(255, 255, 255)
SILVER	#C0C0C0	RGB(192, 192, 192)
GRAY	#808080	RGB(128, 128, 128)
BLACK	#000000	RGB(0, 0, 0)
RED	#FF0000	RGB(255, 0, 0)
MAROON	#800000	RGB(128, 0, 0)
YELLOW	#FFFF00	RGB(255, 255, 0)
OLIVE	#808000	RGB(128, 128, 0)
LIME	#00FF00	RGB(0, 255, 0)
GREEN	#008000	RGB(0, 128, 0)
AQUA	#00FFFF	RGB(0, 255, 255)
TEAL	#008080	RGB(0, 128, 128)
BLUE	#0000FF	RGB(0, 0, 255)
NAVY	#000080	RGB(0, 0, 128)
FUCHSIA	#FF00FF	RGB(255, 0, 255))
PURPLE	#800080	RGB(128, 0, 128))
colors
palette
"
temp.path <- tempfile(fileext = ".R")
writeLines(text, temp.path)
if (rstudioapi::isAvailable()){
rstudioapi::navigateToFile(temp.path)
}
}
open_sample()
seecolor::show_color()
ggplot(diamonds, aes(carat, price))+ geom_bin2d()
library(ggplot2)
ggplot(diamonds, aes(carat, price))+ geom_bin2d()
seecolor::show_color()
head(sleepStudy)
sleepStudy <- read.table("https://caleb-huo.github.io/teaching/data/sleep/sleepstudy.txt", header=T, row.names = 1)
head(sleepStudy)
